---
import LogoLight from '@assets/pma-light.astro';
import LogoDark from '@assets/pma-dark2.astro';
import SelectLanguage from '@components/elements/SelectLanguage.astro';
import ThemeToggle from '@components/elements/ThemeToggle.astro';

const {t} = Astro.props;
const MENU = [
	{name:'works',label: t.globals.navWorks , href: '#works', active:true},
	{name:'projects',label: t.globals.navProjects, href: '#projects', active:true},
	{name:'formation',label: t.globals.navFormation, href: '#formation', active:true},
	{name:'skills',label: t.globals.navSkills, href: '#skills', active:true},
	{name:'contact',label: t.globals.navContact, href: '#contact', active:true}
];

---

<header id="header" class="w-[90%] md:w-[85%] lg:w-[85%] xl:w-[80%] 2xl:w-6xl mx-auto top-3 right-0 left-0 z-150 rounded-full fixed">
	<div class="flex justify-between items-center mx-auto relative">
		<div class="relative">
			<a href="#alterhero" class="transition hover:scale-[1.08] top-0 left-0">
				<LogoLight id="logo-light" class="size-12 sm:w-38 w-auto dark:hidden"/>
				<LogoDark id="logo-dark" class="size-12 sm:w-38 w-auto hidden dark:block"/>
			</a>
		</div>
		<div id="menu" class="flex flex-row items-center justify-between gap-1 px-2 relative
		max-lg:bg-neutral-50 dark:max-lg:bg-neutral-700 rounded-full shadow-xl shadow-neutral-300
		lg:shadow-none lg:grow
		dark:shadow-neutral-800">
			<ul class="flex items-center justify-between lg:w-full">
				<li class="flex items-center justify-center w-full">
					<nav id="navbar" class="hidden absolute max-lg:w-[80%] top-10 right-0 left-0 px-4 py-2 mx-auto
					max-lg:bg-neutral-50 dark:max-lg:bg-neutral-700 shadow-xl shadow-neutral-300 rounded-b-md uppercase text-md border-t border-neutral-200
					lg:block lg:top-0 lg:shadow-none lg:relative lg:border-none
					dark:border-neutral-800 dark:shadow-neutral-800">
						<ul class="flex flex-col lg:flex-row items-center justify-end gap-4">
							{
								MENU.filter(menu => menu.active).map((menu) => (
									<li class="flex justify-center w-1/5 text-center transition hover:scale-105 hover:text-primary dark:hover:text-accent hover:font-bold ">
										<a href={menu.href} aria-label={menu.name +'-section'}>{menu.label}</a>
									</li>
								))
							}
						</ul>
					</nav>
				</li>
				<div class="options flex flex-row items-center lg:bg-neutral-50 lg:shadow-xl lg:shadow-neutral-300 lg:rounded-full lg:py-1 lg:px-2 dark:bg-neutral-700 dark:shadow-neutral-800">
					<li class="flex items-center justify-center">
						<ThemeToggle t={t}/>
					</li>
					<li class="flex items-center justify-center relative">
						<SelectLanguage t={t}/>
					</li>
				</div>
				<li class="lg:hidden">
					<button id="navbar-dropdown" data-collapse-toggle="navbar" type="button" class="items-center p-2 size-10 justify-center text-sm text-neutral-800 cursor-pointer  hover:text-primary focus:outline-none dark:text-white dark:hover:text-accent" aria-controls="navbar-default" aria-expanded="false">
						<span class="sr-only">Open main menu</span>
						<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
						</svg>
					</button>
				</li>
			</ul>
		</div>
	</div>
</header>
<style>
	@reference "@styles/global.css";
	#header{
		animation: nav-shadown-light 5s linear both;
		animation-timeline: scroll();
		animation-range: 0 100px;
	}
	html[data-theme="dark"] #header{
		animation: nav-shadown-dark 5s linear both;
		animation-timeline: scroll();
		animation-range: 0 100px;
	}
	#navbar.open{
		@apply block;
		animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
	}

	@keyframes nav-shadown-light {
		to {
			display: fixed;
			--tw-backdrop-blur: blur(8px);
			-webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
			backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
			background-color:#fafafa;
			--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
			box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
		}
	}

	@keyframes nav-shadown-dark {
		from{
			background:none;
		}
		to {
			display: fixed;
			--tw-backdrop-blur: blur(8px);
			-webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
			backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
			background:#404040;
			--tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
			box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
		}
	}

	#logo-light,
	#logo-dark{
		animation: logo-resize 5s ease-in-out both;
		animation-timeline: scroll();
		animation-range: 0 80px;
	}

	@keyframes logo-resize {
		to {
			padding-left:12px;
			height:2.5rem;
		}
	}

	#menu{
		animation: menu-resize 5s ease-in-out both;
		animation-timeline: scroll();
		animation-range: 0 80px;
	}
	html[data-theme="dark"] #menu{
		animation: menu-resize 5s linear both;
		animation-timeline: scroll();
		animation-range: 0 100px;
	}
	.options{
		animation: navbar-resize 5s ease-in-out both;
		animation-timeline: scroll();
		animation-range: 0 80px;
	}
	@keyframes menu-resize {
		to {
			background-color:none;
			box-shadow:none;
		}
	}

	@keyframes navbar-resize {
		to {
			background-color:none;
			box-shadow:none;
		}
	}


</style>
<script is:inline>

	const navbar = document.getElementById('navbar');
    const navButton = document.getElementById('navbar-dropdown');

    // Close dropdown when clicking outside
    document.addEventListener('click', () => {
        navbar.classList.remove('open');
    });

    // Toggle dropdown when clicking on button
    navButton.addEventListener('click', (e) => {
        e.stopPropagation();
        const isOpened = navbar.classList.contains('open');
        navbar.classList.toggle('open', !isOpened);
    });

	document.addEventListener("astro:page-load", () => {

		const sections = document.querySelectorAll("section");
		const navItems = document.querySelectorAll("header nav a");

		const callback = (entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					navItems.forEach((item) => {
						if (item.getAttribute("aria-label") == entry.target.id) {
							item.classList.add("text-primary");
							item.classList.add("dark:text-accent");
						} else {
							item.classList.remove("text-primary");
							item.classList.remove("dark:text-accent");
						}
					})
				}
			});
		}

		const observer = new IntersectionObserver(callback, {
			root: null,
			rootMargin: "0px",
			threshold: 0.3,
		})

		sections.forEach((section) => {
			observer.observe(section);
		})

		// Cleanup function
		document.onvisibilitychange = () => {
			if (document.visibilityState === "hidden") {
				observer.disconnect();
			} else {
				sections.forEach((section) => {
					observer.observe(section);
				})
			}
		}
	})
</script>
